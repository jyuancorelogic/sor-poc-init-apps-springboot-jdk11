plugins {
	id 'org.springframework.boot' version '2.1.3.RELEASE'
	id 'java'
}

apply plugin: 'io.spring.dependency-management'

group = 'com.corelogic.condosafe'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
}

ext {
	set('springCloudVersion', 'Greenwich.RELEASE')
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-aws'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

subprojects {
	afterEvaluate {
		repositories {
			jcenter()
		}

		compileJava {
			doFirst {
				options.compilerArgs = [
						'--module-path', classpath.asPath,
				]
				classpath = files()
			}
		}

		compileTestJava {
			inputs.property("moduleName", moduleName)
			doFirst {
				options.compilerArgs = [
						'--module-path', classpath.asPath,
						'--add-modules', 'junit',
						'--add-reads', "$moduleName=junit",
						'--patch-module', "$moduleName=" + files(sourceSets.test.java.srcDirs).asPath,
				]
				classpath = files()
			}
		}

		test {
			inputs.property("moduleName", moduleName)
			doFirst {
				jvmArgs = [
						'--module-path', classpath.asPath,
						'--add-modules', 'ALL-MODULE-PATH',
						'--add-reads', "$moduleName=junit",
						'--patch-module', "$moduleName=" + files(sourceSets.test.java.outputDir).asPath,
				]
				classpath = files()
			}
		}
	}
}